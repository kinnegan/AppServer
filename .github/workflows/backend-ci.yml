name: Continuous Integration

on:
  push:
    paths:
      - 'backend/**'

defaults:
  run:
    working-directory: backend

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Restore venv from cache
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Create virtual environment if not cached
        run: |
          if [ ! -d "backend/venv" ]; then
            python -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
          fi

      - name: Save venv to cache
        if: always()
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore venv from cache
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}

      - name: Run linter
        run: |
          if [ -d "backend/venv" ]; then
            source venv/bin/activate
          else
            echo "Error: venv not found"
            exit 1
          fi
          pip install flake8
          flake8 . || echo "Linting issues found, continuing..."

  sast:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore venv from cache
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}

      - name: Run SAST
        run: |
          if [ -d "backend/venv" ]; then
            source venv/bin/activate
          else
            echo "Error: venv not found"
            exit 1
          fi
          pip install bandit
          bandit -r . || echo "SAST issues found, continuing..."

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore venv from cache
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}

      - name: Run tests
        run: |
          if [ -d "backend/venv" ]; then
            source venv/bin/activate
          else
            echo "Error: venv not found"
            exit 1
          fi
          pytest

  build:
    runs-on: ubuntu-latest
    needs: [lint, sast, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore venv from cache
        uses: actions/cache@v3
        with:
          path: backend/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}

      - name: Build project
        run: |
          if [ -d "backend/venv" ]; then
            source venv/bin/activate
          else
            echo "Error: venv not found"
            exit 1
          fi
          python setup.py build
