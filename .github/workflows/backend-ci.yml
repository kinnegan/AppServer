name: continuous_integration

on: 
  push:
      paths:
        - 'backend/**'
defaults:
  run:
    working-directory: backend

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: "3.11"

      - name: Restore venv from cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/venv
          key: TEST
          restore-keys: |
            TEST

      - name: Create virtual environment if not cached
        run: |
            python -m venv venv
            source venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install -e .
            ls -la /venv
            ls -la ${{ github.workspace }}/venv
      - name: check path
        run: |
          pwd
          ls -la
          ls -la /venv
      - name: Verify venv path
        run: |
            if [ -d "${{ github.workspace }}/venv" ]; then
              echo "venv exists"
            else
              echo "venv does not exist"
              exit 1
            fi
      - name: Debug venv
        run: |
            echo "Contents of venv:"
            ls -la ${{ github.workspace }}/venv
            echo "Contents of venv/bin:"
            ls -la ${{ github.workspace }}/venv/bin
      - name: Check venv permissions
        run: |
            ls -ld ${{ github.workspace }}/venv
            ls -la ${{ github.workspace }}/venv

      - name: Debug cache inputs
        run: |
          echo "Path: venv"
          echo "Key: TEST"
          ls -la ${{ github.workspace }}/venv
      - name: Save venv to cache
        if: always()
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/venv
          key: TEST
   
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: list dir#1
        run: ls -la
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: "3.11"
      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
      - name: list dir#2
        run: ls -la
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install bandit semgrep
          pip install -r requirements.txt
          pip install -e .
      - name: Lint with flake8
        run: |
          flake8 . --show-source --statistics
        continue-on-error: true
      - name: run SAST
        run: |
          bandit -r src/modules/
        continue-on-error: true
      - name: Test with pytest
        run: |
          pytest --disable-warnings