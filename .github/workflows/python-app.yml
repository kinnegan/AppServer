name: continuous_integration

on: 
  push:
#      paths:
#        - 'src/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Create Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip 

      - name: Install Dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
          pip install -e .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate Virtual Environment
        run: |
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          source venv/bin/activate

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
  
      - name: Activate Virtual Environment
        run: |
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          source venv/bin/activate

      - name: Install flake8
        run: |
          pip install flake8

      - name: Run flake8
        run: |
          flake8 .
        continue-on-error: true

  SAST:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
  
      - name: Activate Virtual Environment
        run: |
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          source venv/bin/activate

      - name: Install bandit semgrep
        run: |
          pip install bandit semgrep

      - name: Run Bandit
        run: |
          bandit -r src/modules/
        continue-on-error: true

      - name: Run Semgrep
        run: |
          semgrep --config p/ci
        continue-on-error: true

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.35.0/trivy_0.35.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.35.0_Linux-64bit.deb
          rm trivy_0.35.0_Linux-64bit.deb

      - name: Print PATH
        run: echo $PATH

      - name: Check if Trivy is installed
        run: which trivy

      - name: Check Trivy version
        run: trivy --version

      - name: Scan dependencies with Trivy
        run: |
          trivy fs --severity HIGH,CRITICAL .
        continue-on-error: true